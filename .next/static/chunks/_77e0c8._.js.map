{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAOA,MAAM,uBAAS,8JAAM,UAAU,MAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,sKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,sKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAOA,MAAM,0BAAY,8JAAM,UAAU,MAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,yKAAmB,IAAI;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,yKAAmB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md bg-muted px-3 py-1.5 text-xs text-muted-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOA,MAAM,kBAAkB,uKAAiB,QAAQ;AAEjD,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,6LAAC,uKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iXACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/user-settings.ts"],"sourcesContent":["import { createSupabaseBrowserClient } from './supabase-browser'\r\nimport {\r\n  UserProfile,\r\n  UserPreferences,\r\n  UserIntegration,\r\n  UserSecuritySettings\r\n} from './database.types'\r\n\r\n// Lazy getter for supabase instance\r\nfunction getSupabase() {\r\n  return createSupabaseBrowserClient()\r\n}\r\n\r\n// Cache to prevent excessive API calls\r\nlet tablesExistCache: { [key: string]: boolean } = {}\r\nexport let cacheTime: { [key: string]: number } = {}\r\nconst CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\r\n\r\n// Check if a table exists with caching\r\nexport async function tableExists(tableName: string): Promise<boolean> {\r\n  const now = Date.now()\r\n  \r\n  // Return cached result if recent\r\n  if (tablesExistCache[tableName] && (now - cacheTime[tableName]) < CACHE_DURATION) {\r\n    return tablesExistCache[tableName]\r\n  }\r\n\r\n  const supabase = getSupabase()\r\n  if (!supabase) {\r\n    tablesExistCache[tableName] = false\r\n    cacheTime[tableName] = now\r\n    return false\r\n  }\r\n\r\n  try {\r\n    const { error } = await supabase.from(tableName).select('id').limit(1)\r\n    const exists = !error || error.code !== 'PGRST106'\r\n    \r\n    tablesExistCache[tableName] = exists\r\n    cacheTime[tableName] = now\r\n    \r\n    if (!exists) {\r\n      console.warn(`Table ${tableName} does not exist. API calls will return defaults.`)\r\n    }\r\n    \r\n    return exists\r\n  } catch (error) {\r\n    console.error(`Error checking table ${tableName}:`, error)\r\n    tablesExistCache[tableName] = false\r\n    cacheTime[tableName] = now\r\n    return false\r\n  }\r\n}\r\n\r\n// Safe wrapper to prevent API calls when tables don't exist\r\nasync function safeOperation<T>(\r\n  tableName: string,\r\n  operation: () => Promise<T>,\r\n  fallback: T,\r\n  operationName: string\r\n): Promise<T> {\r\n  if (!(await tableExists(tableName))) {\r\n    console.warn(`Skipping ${operationName} - table ${tableName} does not exist`)\r\n    return fallback\r\n  }\r\n  \r\n  try {\r\n    return await operation()\r\n  } catch (error) {\r\n    console.error(`${operationName} failed:`, error)\r\n    return fallback\r\n  }\r\n}\r\n\r\n\r\nexport async function getUserProfile(userId: string): Promise<UserProfile | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const supabase = getSupabase()\r\n      if (!supabase) throw new Error('Supabase not available')\r\n\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('user_id', userId) // Uses idx_profiles_user_id index\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No profile found, create one\r\n          return await createUserProfile(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultProfile(userId),\r\n    'getUserProfile'\r\n  )\r\n}\r\n\r\nfunction getDefaultProfile(userId: string): UserProfile {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    full_name: '',\r\n    display_name: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    work_description: '',\r\n    avatar_url: '',\r\n    onboarding_completed: false,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserProfile(userId: string, profile?: Partial<UserProfile>): Promise<UserProfile | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('profiles')\r\n        .insert({\r\n          user_id: userId, // Uses idx_profiles_user_id index\r\n          full_name: profile?.full_name || '',\r\n          display_name: profile?.display_name || '',\r\n          first_name: profile?.first_name || '',\r\n          last_name: profile?.last_name || '',\r\n          work_description: profile?.work_description || '',\r\n          avatar_url: profile?.avatar_url || '',\r\n          onboarding_completed: profile?.onboarding_completed || false\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultProfile(userId),\r\n    'createUserProfile'\r\n  )\r\n}\r\n\r\nexport async function updateUserProfile(userId: string, updates: Partial<UserProfile>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('profiles')\r\n        .update(updates)\r\n        .eq('user_id', userId) // Uses idx_profiles_user_id index\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserProfile'\r\n  )\r\n}\r\n\r\n// =============================================\r\n// USER PREFERENCES OPERATIONS  \r\n// =============================================\r\n\r\nexport async function getUserPreferences(userId: string): Promise<UserPreferences | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          return await createUserPreferences(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultPreferences(userId),\r\n    'getUserPreferences'\r\n  )\r\n}\r\n\r\nfunction getDefaultPreferences(userId: string): UserPreferences {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    ai_assistance: true,\r\n    smart_suggestions: false,\r\n    theme: 'system',\r\n    font_family: 'inter',\r\n    email_notifications: true,\r\n    marketing_emails: false,\r\n    security_alerts: true,\r\n    analytics_enabled: true,\r\n    data_sharing_enabled: false,\r\n    telemetry_enabled: false,\r\n    auto_template: 'nextjs-developer',\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserPreferences(userId: string, preferences?: Partial<UserPreferences>): Promise<UserPreferences | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .insert({\r\n          user_id: userId,\r\n          ai_assistance: preferences?.ai_assistance ?? true,\r\n          smart_suggestions: preferences?.smart_suggestions ?? false,\r\n          theme: preferences?.theme ?? 'system',\r\n          font_family: preferences?.font_family ?? 'inter',\r\n          email_notifications: preferences?.email_notifications ?? true,\r\n          marketing_emails: preferences?.marketing_emails ?? false,\r\n          security_alerts: preferences?.security_alerts ?? true,\r\n          analytics_enabled: preferences?.analytics_enabled ?? true,\r\n          data_sharing_enabled: preferences?.data_sharing_enabled ?? false,\r\n          telemetry_enabled: preferences?.telemetry_enabled ?? false,\r\n          auto_template: preferences?.auto_template ?? 'nextjs-developer',\r\n          ...preferences\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultPreferences(userId),\r\n    'createUserPreferences'\r\n  )\r\n}\r\n\r\nexport async function updateUserPreferences(userId: string, updates: Partial<UserPreferences>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      // Try to update first\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .update(updates)\r\n        .eq('user_id', userId)\r\n        .select()\r\n\r\n      if (error) throw error\r\n\r\n      // If no rows updated, create preferences\r\n      if (!data || data.length === 0) {\r\n        const created = await createUserPreferences(userId, updates)\r\n        return !!created\r\n      }\r\n\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserPreferences'\r\n  )\r\n}\r\n\r\nexport async function getUserIntegrations(userId: string): Promise<UserIntegration[]> {\r\n  if (!userId) return []\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .order('service_name')\r\n\r\n      if (error) throw error\r\n      return data || []\r\n    },\r\n    getDefaultIntegrations(userId),\r\n    'getUserIntegrations'\r\n  )\r\n}\r\n\r\nfunction getDefaultIntegrations(userId: string): UserIntegration[] {\r\n  const services = ['github', 'google_drive', 'gmail', 'google_calendar', 'artifacts']\r\n  const now = new Date().toISOString()\r\n  \r\n  return services.map(service => ({\r\n    id: '',\r\n    user_id: userId,\r\n    service_name: service,\r\n    is_connected: service === 'artifacts',\r\n    connection_data: undefined,\r\n    last_sync_at: undefined,\r\n    created_at: now,\r\n    updated_at: now\r\n  }))\r\n}\r\n\r\nexport async function upsertUserIntegration(userId: string, serviceName: string, integration: Partial<UserIntegration>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .upsert({\r\n          user_id: userId,\r\n          service_name: serviceName,\r\n          ...integration\r\n        })\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'upsertUserIntegration'\r\n  )\r\n}\r\n\r\nexport async function disconnectUserIntegration(userId: string, serviceName: string): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .update({ \r\n          is_connected: false,\r\n          connection_data: null\r\n        })\r\n        .eq('user_id', userId)\r\n        .eq('service_name', serviceName)\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'disconnectUserIntegration'\r\n  )\r\n}\r\n\r\nexport async function getUserSecuritySettings(userId: string): Promise<UserSecuritySettings | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          return await createUserSecuritySettings(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultSecuritySettings(userId),\r\n    'getUserSecuritySettings'\r\n  )\r\n}\r\n\r\nfunction getDefaultSecuritySettings(userId: string): UserSecuritySettings {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    two_factor_enabled: false,\r\n    backup_codes: undefined,\r\n    last_password_change: undefined,\r\n    login_notifications: true,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserSecuritySettings(userId: string): Promise<UserSecuritySettings | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .insert({\r\n          user_id: userId,\r\n          two_factor_enabled: false,\r\n          login_notifications: true\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultSecuritySettings(userId),\r\n    'createUserSecuritySettings'\r\n  )\r\n}\r\n\r\nexport async function updateUserSecuritySettings(userId: string, updates: Partial<UserSecuritySettings>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .update(updates)\r\n        .eq('user_id', userId)\r\n        .select()\r\n\r\n      if (error) throw error\r\n\r\n      // If no rows updated, create settings\r\n      if (!data || data.length === 0) {\r\n        const created = await createUserSecuritySettings(userId)\r\n        if (created) {\r\n          return await updateUserSecuritySettings(userId, updates)\r\n        }\r\n      }\r\n\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserSecuritySettings'\r\n  )\r\n}\r\n\r\n\r\nexport async function getUserData(userId: string) {\r\n  if (!userId) return null\r\n\r\n  const [profile, preferences, integrations, securitySettings] = await Promise.all([\r\n    getUserProfile(userId),\r\n    getUserPreferences(userId),\r\n    getUserIntegrations(userId),\r\n    getUserSecuritySettings(userId)\r\n  ])\r\n\r\n  return {\r\n    profile,\r\n    preferences,\r\n    integrations,\r\n    securitySettings\r\n  }\r\n}\r\n\r\n// Clear the cache (useful after running migration)\r\nexport function clearSettingsCache(): void {\r\n  tablesExistCache = {}\r\n  cacheTime = {}\r\n}\r\n\r\nexport async function checkSupabaseConnection(): Promise<boolean> {\r\n  const supabase = getSupabase()\r\n  if (!supabase) return false\r\n  \r\n  try {\r\n    const { data: { session } } = await supabase.auth.getSession()\r\n    return !!session\r\n  } catch (error) {\r\n    console.error('Supabase connection check failed:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport async function checkEnhancedTablesExist() {\r\n  const tables = [\r\n    'profiles',\r\n    'user_preferences',\r\n    'user_integrations',\r\n    'user_security_settings'\r\n  ]\r\n  \r\n  const status: { [key: string]: boolean } = {}\r\n  \r\n  for (const table of tables) {\r\n    status[table] = await tableExists(table)\r\n  }\r\n  \r\n  return status\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/settings/privacy/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Switch } from '@/components/ui/switch'\r\nimport { Separator } from '@/components/ui/separator'\r\nimport { useToast } from '@/components/ui/use-toast'\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'\r\nimport { \r\n  Shield, \r\n  Download, \r\n  Trash2, \r\n  Eye, \r\n  EyeOff, \r\n  AlertTriangle,\r\n  FileText,\r\n  Mail,\r\n  Loader2\r\n} from 'lucide-react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useAuth } from '@/lib/auth'\r\nimport { useUserTeam } from '@/lib/user-team-provider'\r\nimport { \r\n  getUserPreferences, \r\n  updateUserPreferences,\r\n} from '@/lib/user-settings'\r\nimport { UserPreferences } from '@/lib/database.types'\r\n\r\ninterface PrivacySettings {\r\n  analytics_enabled: boolean\r\n  marketing_emails: boolean\r\n  data_sharing: boolean\r\n  activity_tracking: boolean\r\n  personalization: boolean\r\n}\r\n\r\nexport default function PrivacySettings() {\r\n  const { session } = useAuth(() => {}, () => {})\r\n  const { userTeam } = useUserTeam()\r\n  const { toast } = useToast()\r\n  \r\n  const isFreeUser = userTeam?.tier === 'free'\r\n\r\n  const [privacySettings, setPrivacySettings] = useState<PrivacySettings>({\r\n    analytics_enabled: true,\r\n    marketing_emails: false,\r\n    data_sharing: false,\r\n    activity_tracking: true,\r\n    personalization: true\r\n  })\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n  const [isExporting, setIsExporting] = useState(false)\r\n  const [isDeletingAccount, setIsDeletingAccount] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!session?.user?.id) return\r\n\r\n    const loadPrivacySettings = async () => {\r\n      setIsLoading(true)\r\n      try {\r\n        const preferences = await getUserPreferences(session.user.id)\r\n        \r\n        if (preferences) {\r\n          setPrivacySettings({\r\n            analytics_enabled: preferences.analytics_enabled ?? true,\r\n            marketing_emails: preferences.marketing_emails ?? false,\r\n            data_sharing: preferences.data_sharing_enabled ?? false,\r\n            activity_tracking: true,\r\n            personalization: preferences.ai_assistance ?? true,\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading privacy settings:', error)\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Failed to load privacy settings. Please refresh the page.\",\r\n          variant: \"destructive\",\r\n        })\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    loadPrivacySettings()\r\n  }, [session?.user?.id, toast])\r\n\r\n  const handleUpdateSetting = async (key: keyof PrivacySettings, value: boolean) => {\r\n    if (!session?.user?.id) return\r\n\r\n    setIsUpdating(true)\r\n    try {\r\n      setPrivacySettings(prev => ({ ...prev, [key]: value }))\r\n      let updateData: Partial<UserPreferences> = {}\r\n      \r\n      switch (key) {\r\n        case 'analytics_enabled':\r\n          updateData.analytics_enabled = value\r\n          break\r\n        case 'marketing_emails':\r\n          updateData.marketing_emails = value\r\n          break\r\n        case 'data_sharing':\r\n          updateData.data_sharing_enabled = value\r\n          break\r\n        case 'personalization':\r\n          updateData.ai_assistance = value\r\n          break\r\n        case 'activity_tracking':\r\n          break\r\n      }\r\n\r\n      if (Object.keys(updateData).length > 0) {\r\n        const success = await updateUserPreferences(session.user.id, updateData)\r\n\r\n        if (!success) {\r\n          setPrivacySettings(prev => ({ ...prev, [key]: !value }))\r\n          throw new Error('Failed to update preference')\r\n        }\r\n      }\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Privacy setting updated successfully.\",\r\n      })\r\n    } catch (error) {\r\n      console.error('Error updating privacy setting:', error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update privacy setting. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsUpdating(false)\r\n    }\r\n  }\r\n\r\n  const handleExportData = async () => {\r\n    if (!session?.user?.id) return\r\n\r\n    setIsExporting(true)\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 3000))\r\n      \r\n      const dataExport = {\r\n        user_id: session.user.id,\r\n        email: session.user.email,\r\n        export_date: new Date().toISOString(),\r\n        note: \"This is a simulated data export. In production, this would contain all user data.\"\r\n      }\r\n      \r\n      const blob = new Blob([JSON.stringify(dataExport, null, 2)], { type: 'application/json' })\r\n      const url = URL.createObjectURL(blob)\r\n      const a = document.createElement('a')\r\n      a.href = url\r\n      a.download = `user-data-export-${new Date().toISOString().split('T')[0]}.json`\r\n      document.body.appendChild(a)\r\n      a.click()\r\n      document.body.removeChild(a)\r\n      URL.revokeObjectURL(url)\r\n\r\n      toast({\r\n        title: \"Data Export Complete\",\r\n        description: \"Your data has been exported and downloaded.\",\r\n      })\r\n    } catch (error) {\r\n      console.error('Error exporting data:', error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to export data. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsExporting(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteAccount = async () => {\r\n    const confirmText = 'DELETE'\r\n    const userInput = prompt(\r\n      `This action cannot be undone. This will permanently delete your account and all associated data.\\n\\nType \"${confirmText}\" to confirm:`\r\n    )\r\n\r\n    if (userInput !== confirmText) {\r\n      return\r\n    }\r\n\r\n    setIsDeletingAccount(true)\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 2000))\r\n      \r\n      toast({\r\n        title: \"Account Deletion Initiated\",\r\n        description: \"Your account deletion has been scheduled. You'll receive a confirmation email.\",\r\n      })\r\n    } catch (error) {\r\n      console.error('Error deleting account:', error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to delete account. Please contact support.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsDeletingAccount(false)\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h2 className=\"text-lg font-medium\">Privacy</h2>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Control how your data is collected and used.\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <Loader2 className=\"h-6 w-6 animate-spin\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h2 className=\"text-lg font-medium\">Privacy</h2>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Control how your data is collected and used.\r\n        </p>\r\n      </div>\r\n\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Data Protection</CardTitle>\r\n          <CardDescription>\r\n            We are committed to protecting your personal information and privacy.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">Data Collection</h4>\r\n              <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n                <li>• Account information and preferences</li>\r\n                <li>• Fragment and project data</li>\r\n                <li>• Usage analytics and performance metrics</li>\r\n                <li>• Communication preferences</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">Data Usage</h4>\r\n              <ul className=\"text-sm text-muted-foreground space-y-1\">\r\n                <li>• Providing and improving our services</li>\r\n                <li>• Personalizing your experience</li>\r\n                <li>• Sending important updates and notifications</li>\r\n                <li>• Analytics and performance optimization</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pt-4\">\r\n            <h4 className=\"font-medium mb-2\">Your Rights</h4>\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              You have the right to access, update, or delete your personal information. \r\n              You can also export your data or request that we stop processing it for marketing purposes.\r\n            </p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Privacy Controls</CardTitle>\r\n          <CardDescription>\r\n            Customize how we collect and use your information.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Eye className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Analytics & Performance</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Help us improve the platform by sharing anonymous usage data\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.analytics_enabled}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('analytics_enabled', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Mail className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Marketing Communications</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Receive updates about new features, tips, and special offers\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.marketing_emails}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('marketing_emails', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Data Sharing</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Share aggregated, anonymous data with research partners\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.data_sharing}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('data_sharing', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <FileText className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Activity Tracking</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Track your activity to provide personalized recommendations\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.activity_tracking}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('activity_tracking', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <EyeOff className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Personalization</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Customize the interface and content based on your preferences\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.personalization}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('personalization', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-4 w-4\" />\r\n                <h4 className=\"font-medium\">Telemetry</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Help us improve our products and services by sharing anonymous usage data. This data may be sold to third parties.\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Switch\r\n                    checked={privacySettings.analytics_enabled}\r\n                    onCheckedChange={(checked: boolean) => handleUpdateSetting('analytics_enabled', checked)}\r\n                    disabled={isUpdating || isFreeUser}\r\n                  />\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to change this setting.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Data Management</CardTitle>\r\n          <CardDescription>\r\n            Export or delete your personal data.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <h4 className=\"font-medium\">Export Your Data</h4>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Download a copy of all your personal data including projects, preferences, and usage history\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button \r\n                    variant=\"outline\" \r\n                    onClick={handleExportData}\r\n                    disabled={isExporting || isFreeUser}\r\n                  >\r\n                    {isExporting ? (\r\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                    ) : (\r\n                      <Download className=\"h-4 w-4 mr-2\" />\r\n                    )}\r\n                    {isExporting ? 'Exporting...' : 'Export Data'}\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to use this feature.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n\r\n          <Separator />\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <AlertTriangle className=\"h-4 w-4 text-destructive\" />\r\n                <h4 className=\"font-medium text-destructive\">Delete Account</h4>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Permanently delete your account and all associated data. This action cannot be undone.\r\n              </p>\r\n            </div>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button \r\n                    variant=\"destructive\" \r\n                    onClick={handleDeleteAccount}\r\n                    disabled={isDeletingAccount || isFreeUser}\r\n                  >\r\n                    {isDeletingAccount ? (\r\n                      <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                    ) : (\r\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                    )}\r\n                    {isDeletingAccount ? 'Deleting...' : 'Delete Account'}\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                {isFreeUser && (\r\n                  <TooltipContent>\r\n                    <p>Upgrade to a paid plan to use this feature.</p>\r\n                  </TooltipContent>\r\n                )}\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      \r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Privacy Contact</CardTitle>\r\n          <CardDescription>\r\n            Questions about privacy or data protection? Get in touch.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <h4 className=\"font-medium\">Data Protection Officer</h4>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                For questions about how we handle your personal data\r\n              </p>\r\n              <a \r\n                href=\"mailto:privacy@codinit.dev\" \r\n                className=\"text-sm text-primary hover:underline\"\r\n              >\r\n                privacy@codinit.dev\r\n              </a>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-medium\">Privacy Policy</h4>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Read our complete privacy policy for detailed information about data handling\r\n              </p>\r\n              <a \r\n                href=\"https://codinit.dev/privacy\" \r\n                className=\"text-sm text-primary hover:underline\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                View Privacy Policy →\r\n              </a>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-medium\">Terms of Service</h4>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Review our terms of service and user agreement\r\n              </p>\r\n              <a \r\n                href=\"https://codinit.dev/terms\" \r\n                className=\"text-sm text-primary hover:underline\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                View Terms of Service →\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {isUpdating && (\r\n        <div className=\"flex items-center justify-center py-4\">\r\n          <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\r\n          <span className=\"text-sm text-muted-foreground\">Updating privacy settings...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}