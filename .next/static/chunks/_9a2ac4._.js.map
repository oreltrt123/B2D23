{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))\r\nSwitch.displayName = SwitchPrimitives.Root.displayName\r\n\r\nexport { Switch }"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAOA,MAAM,uBAAS,8JAAM,UAAU,MAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAiB,IAAI;QACpB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,sKAAiB,KAAK;YACrB,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,sKAAiB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAOA,MAAM,0BAAY,8JAAM,UAAU,MAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,yKAAmB,IAAI;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,yKAAmB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;AAOA,MAAM,uBAAS,8JAAM,UAAU,MAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,sKAAgB,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,+BAAiB,8JAAM,UAAU,OAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,QAAQ;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,sKAAgB,QAAQ,CAAC,WAAW"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/user-settings.ts"],"sourcesContent":["import { createSupabaseBrowserClient } from './supabase-browser'\r\nimport {\r\n  UserProfile,\r\n  UserPreferences,\r\n  UserIntegration,\r\n  UserSecuritySettings\r\n} from './database.types'\r\n\r\n// Lazy getter for supabase instance\r\nfunction getSupabase() {\r\n  return createSupabaseBrowserClient()\r\n}\r\n\r\n// Cache to prevent excessive API calls\r\nlet tablesExistCache: { [key: string]: boolean } = {}\r\nexport let cacheTime: { [key: string]: number } = {}\r\nconst CACHE_DURATION = 5 * 60 * 1000 // 5 minutes\r\n\r\n// Check if a table exists with caching\r\nexport async function tableExists(tableName: string): Promise<boolean> {\r\n  const now = Date.now()\r\n  \r\n  // Return cached result if recent\r\n  if (tablesExistCache[tableName] && (now - cacheTime[tableName]) < CACHE_DURATION) {\r\n    return tablesExistCache[tableName]\r\n  }\r\n\r\n  const supabase = getSupabase()\r\n  if (!supabase) {\r\n    tablesExistCache[tableName] = false\r\n    cacheTime[tableName] = now\r\n    return false\r\n  }\r\n\r\n  try {\r\n    const { error } = await supabase.from(tableName).select('id').limit(1)\r\n    const exists = !error || error.code !== 'PGRST106'\r\n    \r\n    tablesExistCache[tableName] = exists\r\n    cacheTime[tableName] = now\r\n    \r\n    if (!exists) {\r\n      console.warn(`Table ${tableName} does not exist. API calls will return defaults.`)\r\n    }\r\n    \r\n    return exists\r\n  } catch (error) {\r\n    console.error(`Error checking table ${tableName}:`, error)\r\n    tablesExistCache[tableName] = false\r\n    cacheTime[tableName] = now\r\n    return false\r\n  }\r\n}\r\n\r\n// Safe wrapper to prevent API calls when tables don't exist\r\nasync function safeOperation<T>(\r\n  tableName: string,\r\n  operation: () => Promise<T>,\r\n  fallback: T,\r\n  operationName: string\r\n): Promise<T> {\r\n  if (!(await tableExists(tableName))) {\r\n    console.warn(`Skipping ${operationName} - table ${tableName} does not exist`)\r\n    return fallback\r\n  }\r\n  \r\n  try {\r\n    return await operation()\r\n  } catch (error) {\r\n    console.error(`${operationName} failed:`, error)\r\n    return fallback\r\n  }\r\n}\r\n\r\n\r\nexport async function getUserProfile(userId: string): Promise<UserProfile | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const supabase = getSupabase()\r\n      if (!supabase) throw new Error('Supabase not available')\r\n\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('user_id', userId) // Uses idx_profiles_user_id index\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No profile found, create one\r\n          return await createUserProfile(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultProfile(userId),\r\n    'getUserProfile'\r\n  )\r\n}\r\n\r\nfunction getDefaultProfile(userId: string): UserProfile {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    full_name: '',\r\n    display_name: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    work_description: '',\r\n    avatar_url: '',\r\n    onboarding_completed: false,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserProfile(userId: string, profile?: Partial<UserProfile>): Promise<UserProfile | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('profiles')\r\n        .insert({\r\n          user_id: userId, // Uses idx_profiles_user_id index\r\n          full_name: profile?.full_name || '',\r\n          display_name: profile?.display_name || '',\r\n          first_name: profile?.first_name || '',\r\n          last_name: profile?.last_name || '',\r\n          work_description: profile?.work_description || '',\r\n          avatar_url: profile?.avatar_url || '',\r\n          onboarding_completed: profile?.onboarding_completed || false\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultProfile(userId),\r\n    'createUserProfile'\r\n  )\r\n}\r\n\r\nexport async function updateUserProfile(userId: string, updates: Partial<UserProfile>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'profiles',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('profiles')\r\n        .update(updates)\r\n        .eq('user_id', userId) // Uses idx_profiles_user_id index\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserProfile'\r\n  )\r\n}\r\n\r\n// =============================================\r\n// USER PREFERENCES OPERATIONS  \r\n// =============================================\r\n\r\nexport async function getUserPreferences(userId: string): Promise<UserPreferences | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          return await createUserPreferences(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultPreferences(userId),\r\n    'getUserPreferences'\r\n  )\r\n}\r\n\r\nfunction getDefaultPreferences(userId: string): UserPreferences {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    ai_assistance: true,\r\n    smart_suggestions: false,\r\n    theme: 'system',\r\n    font_family: 'inter',\r\n    email_notifications: true,\r\n    marketing_emails: false,\r\n    security_alerts: true,\r\n    analytics_enabled: true,\r\n    data_sharing_enabled: false,\r\n    telemetry_enabled: false,\r\n    auto_template: 'nextjs-developer',\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserPreferences(userId: string, preferences?: Partial<UserPreferences>): Promise<UserPreferences | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .insert({\r\n          user_id: userId,\r\n          ai_assistance: preferences?.ai_assistance ?? true,\r\n          smart_suggestions: preferences?.smart_suggestions ?? false,\r\n          theme: preferences?.theme ?? 'system',\r\n          font_family: preferences?.font_family ?? 'inter',\r\n          email_notifications: preferences?.email_notifications ?? true,\r\n          marketing_emails: preferences?.marketing_emails ?? false,\r\n          security_alerts: preferences?.security_alerts ?? true,\r\n          analytics_enabled: preferences?.analytics_enabled ?? true,\r\n          data_sharing_enabled: preferences?.data_sharing_enabled ?? false,\r\n          telemetry_enabled: preferences?.telemetry_enabled ?? false,\r\n          auto_template: preferences?.auto_template ?? 'nextjs-developer',\r\n          ...preferences\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultPreferences(userId),\r\n    'createUserPreferences'\r\n  )\r\n}\r\n\r\nexport async function updateUserPreferences(userId: string, updates: Partial<UserPreferences>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_preferences',\r\n    async () => {\r\n      // Try to update first\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_preferences')\r\n        .update(updates)\r\n        .eq('user_id', userId)\r\n        .select()\r\n\r\n      if (error) throw error\r\n\r\n      // If no rows updated, create preferences\r\n      if (!data || data.length === 0) {\r\n        const created = await createUserPreferences(userId, updates)\r\n        return !!created\r\n      }\r\n\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserPreferences'\r\n  )\r\n}\r\n\r\nexport async function getUserIntegrations(userId: string): Promise<UserIntegration[]> {\r\n  if (!userId) return []\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .order('service_name')\r\n\r\n      if (error) throw error\r\n      return data || []\r\n    },\r\n    getDefaultIntegrations(userId),\r\n    'getUserIntegrations'\r\n  )\r\n}\r\n\r\nfunction getDefaultIntegrations(userId: string): UserIntegration[] {\r\n  const services = ['github', 'google_drive', 'gmail', 'google_calendar', 'artifacts']\r\n  const now = new Date().toISOString()\r\n  \r\n  return services.map(service => ({\r\n    id: '',\r\n    user_id: userId,\r\n    service_name: service,\r\n    is_connected: service === 'artifacts',\r\n    connection_data: undefined,\r\n    last_sync_at: undefined,\r\n    created_at: now,\r\n    updated_at: now\r\n  }))\r\n}\r\n\r\nexport async function upsertUserIntegration(userId: string, serviceName: string, integration: Partial<UserIntegration>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .upsert({\r\n          user_id: userId,\r\n          service_name: serviceName,\r\n          ...integration\r\n        })\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'upsertUserIntegration'\r\n  )\r\n}\r\n\r\nexport async function disconnectUserIntegration(userId: string, serviceName: string): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_integrations',\r\n    async () => {\r\n      const { error } = await getSupabase()!\r\n        .from('user_integrations')\r\n        .update({ \r\n          is_connected: false,\r\n          connection_data: null\r\n        })\r\n        .eq('user_id', userId)\r\n        .eq('service_name', serviceName)\r\n\r\n      if (error) throw error\r\n      return true\r\n    },\r\n    false,\r\n    'disconnectUserIntegration'\r\n  )\r\n}\r\n\r\nexport async function getUserSecuritySettings(userId: string): Promise<UserSecuritySettings | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .single()\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          return await createUserSecuritySettings(userId)\r\n        }\r\n        throw error\r\n      }\r\n      return data\r\n    },\r\n    getDefaultSecuritySettings(userId),\r\n    'getUserSecuritySettings'\r\n  )\r\n}\r\n\r\nfunction getDefaultSecuritySettings(userId: string): UserSecuritySettings {\r\n  return {\r\n    id: '',\r\n    user_id: userId,\r\n    two_factor_enabled: false,\r\n    backup_codes: undefined,\r\n    last_password_change: undefined,\r\n    login_notifications: true,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  }\r\n}\r\n\r\nexport async function createUserSecuritySettings(userId: string): Promise<UserSecuritySettings | null> {\r\n  if (!userId) return null\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .insert({\r\n          user_id: userId,\r\n          two_factor_enabled: false,\r\n          login_notifications: true\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (error) throw error\r\n      return data\r\n    },\r\n    getDefaultSecuritySettings(userId),\r\n    'createUserSecuritySettings'\r\n  )\r\n}\r\n\r\nexport async function updateUserSecuritySettings(userId: string, updates: Partial<UserSecuritySettings>): Promise<boolean> {\r\n  if (!userId) return false\r\n\r\n  return safeOperation(\r\n    'user_security_settings',\r\n    async () => {\r\n      const { data, error } = await getSupabase()!\r\n        .from('user_security_settings')\r\n        .update(updates)\r\n        .eq('user_id', userId)\r\n        .select()\r\n\r\n      if (error) throw error\r\n\r\n      // If no rows updated, create settings\r\n      if (!data || data.length === 0) {\r\n        const created = await createUserSecuritySettings(userId)\r\n        if (created) {\r\n          return await updateUserSecuritySettings(userId, updates)\r\n        }\r\n      }\r\n\r\n      return true\r\n    },\r\n    false,\r\n    'updateUserSecuritySettings'\r\n  )\r\n}\r\n\r\n\r\nexport async function getUserData(userId: string) {\r\n  if (!userId) return null\r\n\r\n  const [profile, preferences, integrations, securitySettings] = await Promise.all([\r\n    getUserProfile(userId),\r\n    getUserPreferences(userId),\r\n    getUserIntegrations(userId),\r\n    getUserSecuritySettings(userId)\r\n  ])\r\n\r\n  return {\r\n    profile,\r\n    preferences,\r\n    integrations,\r\n    securitySettings\r\n  }\r\n}\r\n\r\n// Clear the cache (useful after running migration)\r\nexport function clearSettingsCache(): void {\r\n  tablesExistCache = {}\r\n  cacheTime = {}\r\n}\r\n\r\nexport async function checkSupabaseConnection(): Promise<boolean> {\r\n  const supabase = getSupabase()\r\n  if (!supabase) return false\r\n  \r\n  try {\r\n    const { data: { session } } = await supabase.auth.getSession()\r\n    return !!session\r\n  } catch (error) {\r\n    console.error('Supabase connection check failed:', error)\r\n    return false\r\n  }\r\n}\r\n\r\nexport async function checkEnhancedTablesExist() {\r\n  const tables = [\r\n    'profiles',\r\n    'user_preferences',\r\n    'user_integrations',\r\n    'user_security_settings'\r\n  ]\r\n  \r\n  const status: { [key: string]: boolean } = {}\r\n  \r\n  for (const table of tables) {\r\n    status[table] = await tableExists(table)\r\n  }\r\n  \r\n  return status\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/settings/account/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Switch } from '@/components/ui/switch'\r\nimport { Separator } from '@/components/ui/separator'\r\nimport { useToast } from '@/components/ui/use-toast'\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\r\nimport { \r\n  AlertTriangle, \r\n  Camera, \r\n  Shield, \r\n  Loader2,\r\n  User,\r\n  Mail,\r\n  Lock,\r\n  Bell\r\n} from 'lucide-react'\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport { useAuthContext } from '@/lib/auth-provider'\r\nimport { createSupabaseBrowserClient } from '@/lib/supabase-browser'\r\nimport { \r\n  getUserProfile, \r\n  getUserPreferences, \r\n  getUserSecuritySettings,\r\n  updateUserProfile, \r\n  updateUserPreferences, \r\n  updateUserSecuritySettings\r\n} from '@/lib/user-settings'\r\n\r\ninterface AccountFormData {\r\n  email: string\r\n  currentPassword: string\r\n  newPassword: string\r\n  confirmPassword: string\r\n  emailNotifications: boolean\r\n  securityAlerts: boolean\r\n  twoFactorEnabled: boolean\r\n  avatarUrl: string\r\n}\r\n\r\ninterface FormErrors {\r\n  email?: string\r\n  newPassword?: string\r\n  confirmPassword?: string\r\n  general?: string\r\n}\r\n\r\nexport default function AccountSettings() {\r\n  const { session, loading: authLoading } = useAuthContext()\r\n  const { toast } = useToast()\r\n  const supabase = createSupabaseBrowserClient()\r\n  \r\n  // Consolidated form state\r\n  const [formData, setFormData] = useState<AccountFormData>({\r\n    email: '',\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n    emailNotifications: true,\r\n    securityAlerts: true,\r\n    twoFactorEnabled: false,\r\n    avatarUrl: ''\r\n  })\r\n  \r\n  const [formErrors, setFormErrors] = useState<FormErrors>({})\r\n  \r\n  // Loading states\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isUpdatingEmail, setIsUpdatingEmail] = useState(false)\r\n  const [isChangingPassword, setIsChangingPassword] = useState(false)\r\n  const [isUpdatingSettings, setIsUpdatingSettings] = useState(false)\r\n  const [isUploadingAvatar, setIsUploadingAvatar] = useState(false)\r\n  \r\n  // Track changes\r\n  const [hasEmailChanged, setHasEmailChanged] = useState(false)\r\n  const [hasPasswordChanged, setHasPasswordChanged] = useState(false)\r\n\r\n  const loadUserData = useCallback(async () => {\r\n    if (!session?.user?.id) return\r\n    \r\n    setIsLoading(true)\r\n    try {\r\n      const [profile, preferences, securitySettings] = await Promise.allSettled([\r\n        getUserProfile(session.user.id),\r\n        getUserPreferences(session.user.id),\r\n        getUserSecuritySettings(session.user.id)\r\n      ])\r\n\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        email: session.user.email || '',\r\n        avatarUrl: profile.status === 'fulfilled' ? profile.value?.avatar_url || '' : '',\r\n        emailNotifications: preferences.status === 'fulfilled' ? preferences.value?.email_notifications ?? true : true,\r\n        securityAlerts: preferences.status === 'fulfilled' ? preferences.value?.security_alerts ?? true : true,\r\n        twoFactorEnabled: securitySettings.status === 'fulfilled' ? securitySettings.value?.two_factor_enabled ?? false : false\r\n      }))\r\n      \r\n      setHasEmailChanged(false)\r\n      setHasPasswordChanged(false)\r\n    } catch (error) {\r\n      console.error('Error loading user data:', error)\r\n      toast({\r\n        title: \"Warning\",\r\n        description: \"Some account data couldn't be loaded. Basic functionality remains available.\",\r\n        variant: \"default\",\r\n      })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [session, toast])\r\n\r\n  useEffect(() => {\r\n    if (!authLoading) {\r\n      loadUserData()\r\n    }\r\n  }, [loadUserData, authLoading])\r\n\r\n  const updateFormData = (field: keyof AccountFormData, value: string | boolean) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }))\r\n    \r\n    // Track changes\r\n    if (field === 'email' && session?.user?.email && value !== session.user.email) {\r\n      setHasEmailChanged(true)\r\n    }\r\n    if (field === 'newPassword' || field === 'confirmPassword') {\r\n      setHasPasswordChanged(true)\r\n    }\r\n    \r\n    // Clear related errors\r\n    setFormErrors(prev => ({ ...prev, [field]: undefined, general: undefined }))\r\n  }\r\n\r\n  const validateEmail = (email: string): string | null => {\r\n    if (!email.trim()) return 'Email is required'\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    if (!emailRegex.test(email)) return 'Please enter a valid email address'\r\n    return null\r\n  }\r\n\r\n  const validatePassword = (): FormErrors => {\r\n    const errors: FormErrors = {}\r\n    \r\n    if (!formData.newPassword) {\r\n      errors.newPassword = 'Password is required'\r\n    } else if (formData.newPassword.length < 8) {\r\n      errors.newPassword = 'Password must be at least 8 characters'\r\n    } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.newPassword)) {\r\n      errors.newPassword = 'Password must contain uppercase, lowercase, and number'\r\n    }\r\n    \r\n    if (!formData.confirmPassword) {\r\n      errors.confirmPassword = 'Please confirm your password'\r\n    } else if (formData.newPassword !== formData.confirmPassword) {\r\n      errors.confirmPassword = 'Passwords do not match'\r\n    }\r\n    \r\n    return errors\r\n  }\r\n\r\n  const handleUpdateEmail = async () => {\r\n    if (!supabase || !session?.user?.id || isUpdatingEmail) return\r\n    \r\n    const emailError = validateEmail(formData.email)\r\n    if (emailError) {\r\n      setFormErrors({ email: emailError })\r\n      return\r\n    }\r\n    \r\n    setIsUpdatingEmail(true)\r\n    setFormErrors({})\r\n    \r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        email: formData.email.trim()\r\n      })\r\n\r\n      if (error) throw error\r\n\r\n      setHasEmailChanged(false)\r\n      toast({\r\n        title: \"Email Update Initiated\",\r\n        description: \"Please check your new email address for confirmation.\",\r\n      })\r\n    } catch (error: any) {\r\n      console.error('Error updating email:', error)\r\n      setFormErrors({ general: error.message || \"Failed to update email\" })\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to update email. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsUpdatingEmail(false)\r\n    }\r\n  }\r\n\r\n  const handleChangePassword = async () => {\r\n    if (!supabase || isChangingPassword) return\r\n    \r\n    const passwordErrors = validatePassword()\r\n    if (Object.keys(passwordErrors).length > 0) {\r\n      setFormErrors(passwordErrors)\r\n      return\r\n    }\r\n    \r\n    setIsChangingPassword(true)\r\n    setFormErrors({})\r\n    \r\n    try {\r\n      const { error } = await supabase.auth.updateUser({\r\n        password: formData.newPassword\r\n      })\r\n\r\n      if (error) throw error\r\n\r\n      // Update security settings\r\n      if (session?.user?.id) {\r\n        await updateUserSecuritySettings(session.user.id, {\r\n          last_password_change: new Date().toISOString()\r\n        })\r\n      }\r\n\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      }))\r\n      setHasPasswordChanged(false)\r\n      \r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Password updated successfully.\",\r\n      })\r\n    } catch (error: any) {\r\n      console.error('Error changing password:', error)\r\n      setFormErrors({ general: error.message || \"Failed to change password\" })\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to change password. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsChangingPassword(false)\r\n    }\r\n  }\r\n\r\n  const handleUpdateNotificationSettings = async (key: 'emailNotifications' | 'securityAlerts', value: boolean) => {\r\n    if (!session?.user?.id || isUpdatingSettings) return\r\n\r\n    const prevValue = formData[key]\r\n    updateFormData(key, value)\r\n\r\n    setIsUpdatingSettings(true)\r\n    try {\r\n      const success = await updateUserPreferences(session.user.id, {\r\n        [key === 'emailNotifications' ? 'email_notifications' : 'security_alerts']: value\r\n      })\r\n\r\n      if (success) {\r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Notification settings updated.\",\r\n        })\r\n      } else {\r\n        throw new Error('Failed to update settings')\r\n      }\r\n    } catch (error) {\r\n      console.warn('Could not save notification settings:', error)\r\n      updateFormData(key, prevValue) // Revert\r\n      \r\n      toast({\r\n        title: \"Warning\",\r\n        description: \"Settings changed locally but could not be saved.\",\r\n        variant: \"default\",\r\n      })\r\n    } finally {\r\n      setIsUpdatingSettings(false)\r\n    }\r\n  }\r\n\r\n  const handleToggle2FA = async () => {\r\n    if (!session?.user?.id || isUpdatingSettings) return\r\n\r\n    const newValue = !formData.twoFactorEnabled\r\n    updateFormData('twoFactorEnabled', newValue)\r\n    \r\n    setIsUpdatingSettings(true)\r\n    \r\n    try {\r\n      const success = await updateUserSecuritySettings(session.user.id, {\r\n        two_factor_enabled: newValue\r\n      })\r\n\r\n      if (success) {\r\n        toast({\r\n          title: \"Success\",\r\n          description: `Two-factor authentication ${newValue ? 'enabled' : 'disabled'}.`,\r\n        })\r\n      } else {\r\n        throw new Error('Failed to update 2FA settings')\r\n      }\r\n    } catch (error) {\r\n      console.warn('Could not save 2FA settings:', error)\r\n      updateFormData('twoFactorEnabled', !newValue) // Revert\r\n      toast({\r\n        title: \"Warning\",\r\n        description: \"Setting changed locally but could not be saved.\",\r\n        variant: \"default\",\r\n      })\r\n    } finally {\r\n      setIsUpdatingSettings(false)\r\n    }\r\n  }\r\n\r\n  const handleAvatarUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (!file || !session?.user?.id || !supabase || isUploadingAvatar) return\r\n\r\n    // Validate file\r\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp']\r\n    const maxSize = 2 * 1024 * 1024 // 2MB\r\n    \r\n    if (!allowedTypes.includes(file.type)) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please upload a valid image file (JPG, PNG, GIF, or WebP)\",\r\n        variant: \"destructive\",\r\n      })\r\n      return\r\n    }\r\n    \r\n    if (file.size > maxSize) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"File size must be less than 2MB\",\r\n        variant: \"destructive\",\r\n      })\r\n      return\r\n    }\r\n\r\n    setIsUploadingAvatar(true)\r\n    try {\r\n      const fileExt = file.name.split('.').pop()?.toLowerCase() || 'jpg'\r\n      const fileName = `${session.user.id}/avatar.${fileExt}`\r\n\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('avatars')\r\n        .upload(fileName, file, { upsert: true })\r\n\r\n      if (uploadError) throw uploadError\r\n\r\n      const { data } = supabase.storage\r\n        .from('avatars')\r\n        .getPublicUrl(fileName)\r\n\r\n      const success = await updateUserProfile(session.user.id, {\r\n        avatar_url: data.publicUrl\r\n      })\r\n\r\n      if (success) {\r\n        updateFormData('avatarUrl', data.publicUrl)\r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Profile picture updated successfully.\",\r\n        })\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error uploading avatar:', error)\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.message || \"Failed to upload profile picture. Please try again.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsUploadingAvatar(false)\r\n      if (event.target) {\r\n        event.target.value = ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loading state\r\n  if (authLoading || isLoading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h2 className=\"text-lg font-medium\">Account</h2>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Manage your account settings and security preferences.\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\r\n          <span className=\"text-sm text-muted-foreground\">Loading account settings...</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Not authenticated state\r\n  if (!session?.user) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h2 className=\"text-lg font-medium\">Account</h2>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Manage your account settings and security preferences.\r\n          </p>\r\n        </div>\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\r\n              <div>\r\n                <p className=\"font-medium\">Authentication Required</p>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Please sign in to access your account settings.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h2 className=\"text-lg font-medium\">Account</h2>\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          Manage your account settings and security preferences.\r\n        </p>\r\n      </div>\r\n\r\n      {/* General Error Display */}\r\n      {formErrors.general && (\r\n        <Card className=\"border-destructive\">\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <AlertTriangle className=\"h-5 w-5 text-destructive\" />\r\n              <p className=\"text-sm text-destructive\">{formErrors.general}</p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Profile Picture Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <User className=\"h-5 w-5\" />\r\n            Profile Picture\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Update your profile picture and display information.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center gap-4\">\r\n            <Avatar className=\"h-20 w-20\">\r\n              <AvatarImage src={formData.avatarUrl} alt=\"Profile picture\" />\r\n              <AvatarFallback>\r\n                {session.user.email?.charAt(0).toUpperCase() || 'U'}\r\n              </AvatarFallback>\r\n            </Avatar>\r\n            <div className=\"space-y-2\">\r\n              <Button \r\n                variant=\"outline\" \r\n                size=\"sm\" \r\n                disabled={isUploadingAvatar}\r\n                onClick={() => document.getElementById('avatar-upload')?.click()}\r\n              >\r\n                {isUploadingAvatar ? (\r\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                ) : (\r\n                  <Camera className=\"h-4 w-4 mr-2\" />\r\n                )}\r\n                Change picture\r\n              </Button>\r\n              <input\r\n                id=\"avatar-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                className=\"hidden\"\r\n                onChange={handleAvatarUpload}\r\n              />\r\n              <p className=\"text-xs text-muted-foreground\">\r\n                JPG, PNG, GIF, or WebP. Max size 2MB.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Email Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Mail className=\"h-5 w-5\" />\r\n            Email Address\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Your email address is used for authentication and notifications.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"email\">Email address</Label>\r\n            <div className=\"flex gap-2\">\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={(e) => updateFormData('email', e.target.value)}\r\n                className=\"flex-1\"\r\n              />\r\n              <Button \r\n                onClick={handleUpdateEmail}\r\n                disabled={isUpdatingEmail || !hasEmailChanged}\r\n              >\r\n                {isUpdatingEmail && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\r\n                Update\r\n              </Button>\r\n            </div>\r\n            {formErrors.email && (\r\n              <p className=\"text-sm text-destructive\">{formErrors.email}</p>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Password Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Lock className=\"h-5 w-5\" />\r\n            Password\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Update your password to keep your account secure.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"newPassword\">New password</Label>\r\n            <Input\r\n              id=\"newPassword\"\r\n              type=\"password\"\r\n              value={formData.newPassword}\r\n              onChange={(e) => updateFormData('newPassword', e.target.value)}\r\n              placeholder=\"Enter new password\"\r\n            />\r\n            {formErrors.newPassword && (\r\n              <p className=\"text-sm text-destructive\">{formErrors.newPassword}</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"confirmPassword\">Confirm new password</Label>\r\n            <Input\r\n              id=\"confirmPassword\"\r\n              type=\"password\"\r\n              value={formData.confirmPassword}\r\n              onChange={(e) => updateFormData('confirmPassword', e.target.value)}\r\n              placeholder=\"Confirm new password\"\r\n            />\r\n            {formErrors.confirmPassword && (\r\n              <p className=\"text-sm text-destructive\">{formErrors.confirmPassword}</p>\r\n            )}\r\n          </div>\r\n\r\n          <Button \r\n            onClick={handleChangePassword}\r\n            disabled={isChangingPassword || !hasPasswordChanged}\r\n          >\r\n            {isChangingPassword && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\r\n            Change password\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Security Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Shield className=\"h-5 w-5\" />\r\n            Security\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Manage two-factor authentication and security features.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Two-Factor Authentication</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                {formData.twoFactorEnabled \r\n                  ? 'Two-factor authentication is enabled' \r\n                  : 'Add extra security with 2FA'\r\n                }\r\n              </p>\r\n            </div>\r\n            <Button \r\n              variant={formData.twoFactorEnabled ? \"destructive\" : \"default\"}\r\n              onClick={handleToggle2FA}\r\n              disabled={isUpdatingSettings}\r\n            >\r\n              {isUpdatingSettings && <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />}\r\n              {formData.twoFactorEnabled ? 'Disable' : 'Enable'}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Notifications Section */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Bell className=\"h-5 w-5\" />\r\n            Notifications\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Choose which notifications you want to receive.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Email notifications</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Receive notifications about your account activity\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              checked={formData.emailNotifications}\r\n              onCheckedChange={(checked) => handleUpdateNotificationSettings('emailNotifications', checked)}\r\n              disabled={isUpdatingSettings}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label>Security alerts</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Get notified about important security events\r\n              </p>\r\n            </div>\r\n            <Switch\r\n              checked={formData.securityAlerts}\r\n              onCheckedChange={(checked) => handleUpdateNotificationSettings('securityAlerts', checked)}\r\n              disabled={isUpdatingSettings}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Separator />\r\n\r\n      {/* Danger Zone */}\r\n      <Card className=\"border-destructive\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-destructive flex items-center gap-2\">\r\n            <AlertTriangle className=\"h-5 w-5\" />\r\n            Danger Zone\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Irreversible and destructive actions.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <Label className=\"font-medium\">Delete Account</Label>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Permanently delete your account and all associated data\r\n              </p>\r\n            </div>\r\n            <Button \r\n              variant=\"destructive\" \r\n              size=\"sm\"\r\n              onClick={() => {\r\n                toast({\r\n                  title: \"Feature Not Available\",\r\n                  description: \"Account deletion is not yet implemented. Please contact support if needed.\",\r\n                  variant: \"default\",\r\n                })\r\n              }}\r\n            >\r\n              Delete Account\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1955, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}